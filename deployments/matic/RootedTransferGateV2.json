{
  "address": "0xE1a3bAEB559DD858C6DbeC54eA6521dcE38cD986",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract LiquidityLockedERC20",
          "name": "_rootedToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeSplitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dumpTaxDurationInSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dumpTaxEndTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dumpTaxStartRate",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeControllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeSplitter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesRate",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "freeParticipants",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "handleTransfer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidityControllers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityIncreaseRate",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "startTaxRate",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "durationInSeconds",
          "type": "uint256"
        }
      ],
      "name": "setDumpTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeController",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "setFeeControllers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSplitter",
          "type": "address"
        }
      ],
      "name": "setFeeSplitter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_feesRate",
          "type": "uint16"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "free",
          "type": "bool"
        }
      ],
      "name": "setFreeParticipant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_liquidityIncreaseRate",
          "type": "uint16"
        }
      ],
      "name": "setLiquidityIncreaseRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_unrestricted",
          "type": "bool"
        }
      ],
      "name": "setUnrestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferInProgress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unrestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6ce403c73705f3da32ae42899da1ca9580f967b61435fb553dd5518cbfd2fcd",
  "receipt": {
    "to": null,
    "from": "0xBd57Dac98f75c9Db5f18ffA13E7eaf48b4A5Bb70",
    "contractAddress": "0xE1a3bAEB559DD858C6DbeC54eA6521dcE38cD986",
    "transactionIndex": 46,
    "gasUsed": "1345378",
    "logsBloom": "0x
    "blockHash": "0x39cec0990c322fcf8bc8dfd245b1f0c6d1abbf135ec4d35f6a83075de4809c2f",
    "transactionHash": "0xb6ce403c73705f3da32ae42899da1ca9580f967b61435fb553dd5518cbfd2fcd",
    "logs": [
      {
        "transactionIndex": 46,
        "blockNumber": 38298493,
        "transactionHash": "0xb6ce403c73705f3da32ae42899da1ca9580f967b61435fb553dd5518cbfd2fcd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000bd57dac98f75c9db5f18ffa13e7eaf48b4a5bb70",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000092f414145069b40000000000000000000000000000000000000000000000006bf036f91b341000000000000000000000000000000000000000000000000074eaafac14189ede160000000000000000000000000000000000000000000000006b5d42e506e3a64c000000000000000000000000000000000000000000000074eb42a0282cef47ca",
        "logIndex": 202,
        "blockHash": "0x39cec0990c322fcf8bc8dfd245b1f0c6d1abbf135ec4d35f6a83075de4809c2f"
      }
    ],
    "blockNumber": 38298493,
    "cumulativeGasUsed": "9127643",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe6a11F125a834E0676F3f8f33eb347D4e1938264",
    "0x96E5b9e7bc0eC533385e18572b9155f9656ad735"
  ],
  "numDeployments": 1,
  "solcInputHash": "68631ae747d7e917982f4819604187de",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract LiquidityLockedERC20\",\"name\":\"_rootedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeSplitter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dumpTaxDurationInSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dumpTaxEndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dumpTaxStartRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeControllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSplitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freeParticipants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityControllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityIncreaseRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"startTaxRate\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"durationInSeconds\",\"type\":\"uint256\"}],\"name\":\"setDumpTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeController\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"setFeeControllers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSplitter\",\"type\":\"address\"}],\"name\":\"setFeeSplitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_feesRate\",\"type\":\"uint16\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"free\",\"type\":\"bool\"}],\"name\":\"setFreeParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_liquidityIncreaseRate\",\"type\":\"uint16\"}],\"name\":\"setLiquidityIncreaseRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_unrestricted\",\"type\":\"bool\"}],\"name\":\"setUnrestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unrestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RootedTransferGateV2.sol\":\"RootedTransferGateV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x8a2fdbc25e22c95dce8da7c8d704ef5322fc11ccfc930e2b5c2e6c2bdb80c8dd\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nSimplified thanks to higher solidity version\\nBut same functionality\\n*/\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\nabstract contract ERC20 is IERC20 \\n{\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) internal _balanceOf;\\n    mapping (address => mapping (address => uint256)) public override allowance;\\n\\n    uint256 public override totalSupply;\\n\\n    string public override name;\\n    string public override symbol;\\n    uint8 public override decimals = 18;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory _name, string memory _symbol) \\n    {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    function balanceOf(address a) public virtual override view returns (uint256) { return _balanceOf[a]; }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        uint256 oldAllowance = allowance[sender][msg.sender];\\n        if (oldAllowance != uint256(-1)) {\\n            _approve(sender, msg.sender, oldAllowance.sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(msg.sender, spender, allowance[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(msg.sender, spender, allowance[msg.sender][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balanceOf[sender] = _balanceOf[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balanceOf[recipient] = _balanceOf[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        totalSupply = totalSupply.add(amount);\\n        _balanceOf[account] = _balanceOf[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balanceOf[account] = _balanceOf[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        totalSupply = totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        allowance[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 _decimals) internal {\\n        decimals = _decimals;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x4686ef4ef43db1281a16cadbf7570a8d1a359167503af22fc7050da55c0cc384\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/GatedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/* ROOTKIT:\\nA standard ERC20 with an extra hook: An installable transfer\\ngate allowing for token tax and burn on transfer\\n*/\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./ITransferGate.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./TokensRecoverable.sol\\\";\\nimport \\\"./IGatedERC20.sol\\\";\\n\\nabstract contract GatedERC20 is ERC20, TokensRecoverable, IGatedERC20\\n{\\n    using SafeMath for uint256;\\n\\n    ITransferGate public override transferGate;\\n\\n    constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol)\\n    {\\n    }\\n\\n    function setTransferGate(ITransferGate _transferGate) public override ownerOnly()\\n    {\\n        transferGate = _transferGate;\\n    }\\n\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override \\n    {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        ITransferGate _transferGate = transferGate;\\n        uint256 remaining = amount;\\n        if (address(_transferGate) != address(0)) \\n        {\\n            address splitter = _transferGate.feeSplitter();\\n            uint256 fees = _transferGate.handleTransfer(msg.sender, sender, recipient, amount);\\n            if (fees > 0)\\n            {\\n               _balanceOf[splitter] = _balanceOf[splitter].add(fees);\\n                emit Transfer(sender, splitter, fees);\\n                remaining = remaining.sub(fees);\\n            }           \\n        }\\n        _balanceOf[sender] = _balanceOf[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balanceOf[recipient] = _balanceOf[recipient].add(remaining);\\n        emit Transfer(sender, recipient, remaining);\\n    }\\n\\n    function burn(uint256 amount) public override\\n    {\\n        _burn(msg.sender, amount);\\n    }\\n}\",\"keccak256\":\"0x495e7a7929b9777ede5a97fd93a0c6304550bde39c9faaca982e2c6d9cefadc4\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface IERC20 \\n{\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address _account) external view returns (uint256);\\n    function transfer(address _recipient, uint256 _amount) external returns (bool);\\n    function allowance(address _owner, address _spender) external view returns (uint256);\\n    function approve(address _spender, uint256 _amount) external returns (bool);\\n    function transferFrom(address _sender, address _recipient, uint256 _amount) external returns (bool);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x686935694b8075dd535c64bd63dbb9a5fbc720e11143819c6fe2cbfa194e7610\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IGatedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./ITransferGate.sol\\\";\\n\\ninterface IGatedERC20 is IERC20\\n{\\n    function transferGate() external view returns (ITransferGate);\\n\\n    function setTransferGate(ITransferGate _transferGate) external;\\n    function burn(uint256 amount) external;\\n}\",\"keccak256\":\"0x122a08f7bdad21e61cb346521bf5608a5a3fc7b9ed58cda4f5bee04e8377fa8c\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ILiquidityLockedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IUniswapV2Pair.sol\\\";\\n\\ninterface ILiquidityLockedERC20\\n{\\n    function setLiquidityLock(IUniswapV2Pair _liquidityPair, bool _locked) external;\\n}\",\"keccak256\":\"0x1d53fa69ac8c1ddb2dd706c39fd581fefeeab1e3795e39414cdeb0ba26d36cdc\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IOwned.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface IOwned\\n{\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function owner() external view returns (address);\\n\\n    function transferOwnership(address newOwner) external;\\n    function claimOwnership() external;\\n}\",\"keccak256\":\"0xc359bb32bf2da96347d1b9a49ac4db7376cfe150a606ec808a5d758a465ee3e0\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ITokensRecoverable.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface ITokensRecoverable\\n{\\n    function recoverTokens(IERC20 token) external;\\n}\",\"keccak256\":\"0x739d2acb80e96298bcf576c736e45f6c0df9167ff2e6e14f1cc009e700ec0cdb\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ITransferGate.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface ITransferGate\\n{\\n    function feeSplitter() external view returns (address);\\n    function handleTransfer(address msgSender, address from, address to, uint256 amount) external returns (uint256);\\n}\",\"keccak256\":\"0x0cdf5a8d3b86453c35af1c62f27f8182edcad68de009ebcfb423af7fa41aada4\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.4;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\",\"keccak256\":\"0x02e97c5280dc3f9fcb05871dc67e415e4df5e929a633187d29e0a60f117a2332\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/LiquidityLockedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./IUniswapV2Pair.sol\\\";\\nimport \\\"./GatedERC20.sol\\\";\\nimport \\\"./ILiquidityLockedERC20.sol\\\";\\n\\nabstract contract LiquidityLockedERC20 is GatedERC20, ILiquidityLockedERC20\\n{\\n    mapping (IUniswapV2Pair => bool) public liquidityPairLocked;\\n    mapping (address => bool) public liquidityController;\\n\\n    struct CallRecord\\n    {\\n        address origin;\\n        uint32 blockNumber;\\n        bool transferFrom;\\n    }\\n\\n    CallRecord balanceAllowed;\\n\\n    constructor(string memory _name, string memory _symbol)\\n        GatedERC20(_name, _symbol)\\n    {\\n    }\\n\\n    function setLiquidityLock(IUniswapV2Pair _liquidityPair, bool _locked) public override\\n    {\\n        require (liquidityController[msg.sender], \\\"Liquidity controller only\\\");\\n        require (_liquidityPair.token0() == address(this) || _liquidityPair.token1() == address(this), \\\"Unrelated pair\\\");\\n        liquidityPairLocked[_liquidityPair] = _locked;\\n    }\\n\\n    function setLiquidityController(address _liquidityController, bool _canControl) public ownerOnly()\\n    {\\n        liquidityController[_liquidityController] = _canControl;\\n    }\\n\\n    function balanceOf(address account) public override view returns (uint256) \\n    {\\n        IUniswapV2Pair pair = IUniswapV2Pair(address(msg.sender));\\n        if (liquidityPairLocked[pair]) {\\n            CallRecord memory last = balanceAllowed;\\n            require (last.origin == tx.origin && last.blockNumber == block.number, \\\"Liquidity is locked\\\");\\n            if (last.transferFrom) {\\n                (uint256 reserve0, uint256 reserve1,) = pair.getReserves();\\n                IERC20 token0 = IERC20(pair.token0());\\n                if (address(token0) == address(this)) {\\n                    require (IERC20(pair.token1()).balanceOf(address(pair)) < reserve1, \\\"Liquidity is locked\\\");\\n                }\\n                else {\\n                    require (token0.balanceOf(address(pair)) < reserve0, \\\"Liquidity is locked\\\");\\n                }\\n            }\\n        }\\n        return super.balanceOf(account);\\n    }\\n\\n    function allowBalance(bool _transferFrom) private\\n    {\\n        CallRecord memory last = balanceAllowed;\\n        CallRecord memory allow = CallRecord({ \\n            origin: tx.origin,\\n            blockNumber: uint32(block.number),\\n            transferFrom: _transferFrom\\n        });\\n        require (last.origin != allow.origin || last.blockNumber != allow.blockNumber || last.transferFrom != allow.transferFrom, \\\"Liquidity is locked (Please try again next block)\\\");\\n        balanceAllowed = allow;\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) \\n    {        \\n        if (liquidityPairLocked[IUniswapV2Pair(address(msg.sender))]) {\\n            allowBalance(false);\\n        }\\n        else {\\n            balanceAllowed = CallRecord({ origin: address(0), blockNumber: 0, transferFrom: false });\\n        }\\n        return super.transfer(recipient, amount);\\n    }\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) \\n    {\\n        if (liquidityPairLocked[IUniswapV2Pair(recipient)]) {\\n            allowBalance(true);\\n        }\\n        else {\\n            balanceAllowed = CallRecord({ origin: address(0), blockNumber: 0, transferFrom: false });\\n        }\\n        return super.transferFrom(sender, recipient, amount);\\n    }\\n}\",\"keccak256\":\"0x783fab37328e3eabd839537c688c6e9a4620377879a03e0ef0b18f37f1ab83ea\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nProvides ownerOnly() modifier\\nAllows for ownership transfer but requires the new\\nowner to claim (accept) ownership\\nSafer because no accidental transfers or renouncing\\n*/\\n\\nimport \\\"./IOwned.sol\\\";\\n\\nabstract contract Owned is IOwned\\n{\\n    address public override owner = msg.sender;\\n    address internal pendingOwner;\\n\\n    modifier ownerOnly()\\n    {\\n        require (msg.sender == owner, \\\"Owner only\\\");\\n        _;\\n    }\\n\\n    function transferOwnership(address newOwner) public override ownerOnly()\\n    {\\n        pendingOwner = newOwner;\\n    }\\n\\n    function claimOwnership() public override\\n    {\\n        require (pendingOwner == msg.sender);\\n        pendingOwner = address(0);\\n        emit OwnershipTransferred(owner, msg.sender);\\n        owner = msg.sender;\\n    }\\n}\",\"keccak256\":\"0x32a0ae294ac89943fbfb30c5de406ff0edc6d5295133cf5fa702a82cda18a89d\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/RootedTransferGateV2.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./Address.sol\\\";\\nimport \\\"./IUniswapV2Pair.sol\\\";\\nimport \\\"./LiquidityLockedERC20.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./TokensRecoverable.sol\\\";\\nimport \\\"./ITransferGate.sol\\\";\\n\\ncontract RootedTransferGateV2 is TokensRecoverable, ITransferGate\\n{   \\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n\\n    LiquidityLockedERC20 immutable internal rootedToken;\\n\\n    bool public unrestricted;\\n    mapping (address => bool) public liquidityControllers;\\n    mapping (address => bool) public feeControllers;\\n    mapping (address => bool) public freeParticipants;\\n\\n    address public override feeSplitter;\\n    uint16 public feesRate;\\n    uint16 public liquidityIncreaseRate;\\n   \\n    uint16 public dumpTaxStartRate;\\n    uint256 public dumpTaxDurationInSeconds;\\n    uint256 public dumpTaxEndTimestamp;\\n\\n    bool public transferInProgress;\\n\\n    constructor(LiquidityLockedERC20 _rootedToken, address _feeSplitter)\\n    {\\n        rootedToken = _rootedToken;\\n        feeSplitter = _feeSplitter;\\n    }\\n\\n    function setFeeSplitter(address _feeSplitter) public ownerOnly()\\n    {\\n        feeSplitter = _feeSplitter;\\n    }\\n\\n    function setLiquidityIncreaseRate(uint16 _liquidityIncreaseRate) public ownerOnly()\\n    {\\n        require (_liquidityIncreaseRate <= 9900, \\\"Fee rate must be less than or equal to 99%\\\");\\n        liquidityIncreaseRate = _liquidityIncreaseRate;\\n    }\\n    \\n    function setFeeControllers(address feeController, bool allow) public ownerOnly()\\n    {\\n        feeControllers[feeController] = allow;\\n    }\\n\\n    // sets an address to be fee exempt\\n    function setFreeParticipant(address participant, bool free) public\\n    {\\n        require (msg.sender == owner || feeControllers[msg.sender], \\\"Not an owner or free participant controller\\\");\\n        freeParticipants[participant] = free;\\n    }\\n\\n    // sets global extra tax rate, declines over time\\n    function setDumpTax(uint16 startTaxRate, uint256 durationInSeconds) public\\n    {\\n        require (feeControllers[msg.sender] || msg.sender == owner, \\\"Not an owner or fee controller\\\");\\n        require (startTaxRate <= 10000, \\\"Dump tax rate must be less than or equal to 100%\\\");\\n\\n        dumpTaxStartRate = startTaxRate;\\n        dumpTaxDurationInSeconds = durationInSeconds;\\n        dumpTaxEndTimestamp = block.timestamp + durationInSeconds;\\n    }\\n\\n    // sets global fee rate\\n    function setFees(uint16 _feesRate) public\\n    {\\n        require (feeControllers[msg.sender] || msg.sender == owner, \\\"Not an owner or fee controller\\\");\\n        require (_feesRate <= 10000, \\\"Fee rate must be less than or equal to 100%\\\");\\n        feesRate = _feesRate;\\n    }\\n\\n    // removes fees from all transfers\\n    function setUnrestricted(bool _unrestricted) public\\n    {\\n        require (feeControllers[msg.sender] || msg.sender == owner, \\\"Not an unrestricted controller\\\");\\n        unrestricted = _unrestricted;\\n    }\\n\\n    function handleTransfer(address, address from, address to, uint256 amount) public virtual override returns (uint256)\\n    {\\n        if (transferInProgress) {\\n            return 0;\\n        }\\n\\n        uint taxRate = getTaxRate();\\n\\n        IUniswapV2Pair pair = IUniswapV2Pair(from);\\n        \\n        if (rootedToken.liquidityPairLocked(pair) && liquidityIncreaseRate > 0) {\\n\\n            rootedToken.setLiquidityLock(pair, false);\\n\\n            IERC20 pairedToken = IERC20(getPairedToken(pair));\\n\\n            (uint112 pairedReserves, uint112 rootedReserves,) = pair.getReserves();\\n            (pairedReserves, rootedReserves) = address(rootedToken) > address(pairedToken) ? (pairedReserves, rootedReserves) : (rootedReserves, pairedReserves);\\n\\n            uint256 pairedBalance = pairedToken.balanceOf(address(pair));\\n            require(pairedBalance > pairedReserves);\\n\\n            uint256 amountOut = getAmountOut(pairedBalance - pairedReserves, pairedReserves, rootedReserves);\\n            uint256 amountAfterFee = amountOut - (amountOut * taxRate / 10000);\\n            require (amount <= amountAfterFee); \\n  \\n            transferInProgress = true;\\n            rootedToken.transfer(from, amount * liquidityIncreaseRate / 10000);\\n            transferInProgress = false;\\n\\n            rootedToken.setLiquidityLock(pair, false);\\n        }\\n\\n        if (unrestricted || freeParticipants[from] || freeParticipants[to]) {\\n            return 0;\\n        }\\n\\n        return amount * taxRate / 10000;\\n    }\\n\\n    function getTaxRate() private view returns (uint) {\\n        uint dumpTax = block.timestamp >= dumpTaxEndTimestamp ? 0 : dumpTaxStartRate*(dumpTaxEndTimestamp - block.timestamp)*1e18/dumpTaxDurationInSeconds/1e18;\\n        uint totalTax = feesRate + dumpTax;\\n        return totalTax = totalTax > 10000 ? 10000 : totalTax;\\n    }\\n\\n    function getPairedToken(IUniswapV2Pair pair) private view returns (address){\\n        address token0 = pair.token0();\\n        return token0 == address(rootedToken) ? pair.token1() : token0;\\n    }\\n\\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256 amountOut) {\\n        uint256 amountInWithFee = amountIn.mul(997);\\n        uint256 numerator = amountInWithFee.mul(reserveOut);\\n        uint256 denominator = reserveIn.mul(1000).add(amountInWithFee);\\n        amountOut = numerator / denominator;\\n    }\\n}\",\"keccak256\":\"0x3ec7e0f741ed69294fa01474da8466d2c72bd14446adf2d7cd8ec90bc339207a\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nModified to remove some junk\\nAlso modified to remove silly restrictions (traps!) within safeApprove\\n*/\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {        \\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0x3f7361be3d553e5eb15d84b652578d89911db8e744de78bd990f1d3cbf7c065e\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nlibrary SafeMath \\n{\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) \\n        {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n    \\n    function div(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        return c;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0xfc5368962f37ca7239c0f1c40cb7bee593a2d20e58163b0ff131312a288d39eb\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/TokensRecoverable.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nAllows recovery of unexpected tokens (airdrops, etc)\\nInheriters can customize logic by overriding canRecoverTokens\\n*/\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ITokensRecoverable.sol\\\";\\n\\nabstract contract TokensRecoverable is Owned, ITokensRecoverable\\n{\\n    using SafeERC20 for IERC20;\\n\\n    function recoverTokens(IERC20 token) public override ownerOnly() \\n    {\\n        require (canRecoverTokens(token));\\n        token.safeTransfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n\\n    function canRecoverTokens(IERC20 token) internal virtual view returns (bool) \\n    { \\n        return address(token) != address(this); \\n    }\\n}\",\"keccak256\":\"0x2b4634e73f41f40fdd057dfd3422c3f70599d9f41bc34dc8cd988e58120a8f7c\",\"license\":\"U-U-U-UPPPPP\"}},\"version\":1}",
  "bytecode": "0x60a0604052600080546001600160a01b0319163317905534801561002257600080fd5b5060405161173b38038061173b8339818101604052604081101561004557600080fd5b508051602090910151606082901b6001600160601b031916608052600580546001600160a01b0319166001600160a01b039283161790551661168e6100ad6000398061080e52806108ed52806109d85280610af05280610bd3528061112e525061168e6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636052970c116100c3578063a61515251161007c578063a615152514610345578063b17fb9d614610366578063b40e180b1461038c578063ca1123c214610394578063e30b472f146103b5578063f2fde38b146103db5761014d565b80636052970c146102885780638327eb87146102ac5780638da5cb5b146102cb57806395c47d06146102d35780639aa3d4bd1461030f5780639c8c247c146103175761014d565b80631dbb8db3116101155780631dbb8db3146101e4578063240a53d41461020a57806326278f86146102305780633e2a196e14610238578063467ee03c146102665780634e71e0c8146102805761014d565b80630423142914610152578063127043c31461017157806313b0dc981461017957806316114acd146101a25780631d6f7d50146101c8575b600080fd5b61015a610401565b6040805161ffff9092168252519081900360200190f35b61015a610412565b6101a06004803603604081101561018f57600080fd5b5061ffff8135169060200135610423565b005b6101a0600480360360208110156101b857600080fd5b50356001600160a01b031661050e565b6101d06105fd565b604080519115158252519081900360200190f35b6101d0600480360360208110156101fa57600080fd5b50356001600160a01b0316610606565b6101d06004803603602081101561022057600080fd5b50356001600160a01b031661061b565b6101d0610630565b6101a06004803603604081101561024e57600080fd5b506001600160a01b0381351690602001351515610640565b61026e6106b7565b60408051918252519081900360200190f35b6101a06106bd565b610290610730565b604080516001600160a01b039092168252519081900360200190f35b6101a0600480360360208110156102c257600080fd5b5035151561073f565b6102906107d6565b61026e600480360360808110156102e957600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356107e5565b61026e610cad565b6101a06004803603604081101561032d57600080fd5b506001600160a01b0381351690602001351515610cb3565b6101a06004803603602081101561035b57600080fd5b503561ffff16610d41565b6101a06004803603602081101561037c57600080fd5b50356001600160a01b0316610df4565b61015a610e62565b6101a0600480360360208110156103aa57600080fd5b503561ffff16610e73565b6101d0600480360360208110156103cb57600080fd5b50356001600160a01b0316610f53565b6101a0600480360360208110156103f157600080fd5b50356001600160a01b0316610f68565b600554600160b01b900461ffff1681565b600554600160a01b900461ffff1681565b3360009081526003602052604090205460ff168061044b57506000546001600160a01b031633145b61049c576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e206f776e6572206f722066656520636f6e74726f6c6c65720000604482015290519081900360640190fd5b6127108261ffff1611156104e15760405162461bcd60e51b81526004018080602001828103825260308152602001806115aa6030913960400191505060405180910390fd5b6005805461ffff909316600160c01b0261ffff60c01b199093169290921790915560068190554201600755565b6000546001600160a01b0316331461055a576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b61056381610fd6565b61056c57600080fd5b6105fa33826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d60208110156105e757600080fd5b50516001600160a01b0384169190610fe8565b50565b60085460ff1681565b60046020526000908152604090205460ff1681565b60026020526000908152604090205460ff1681565b600154600160a01b900460ff1681565b6000546001600160a01b0316331461068c576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b60075481565b6001546001600160a01b031633146106d457600080fd5b600180546001600160a01b03191690556000805460405133926001600160a01b03909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03191633179055565b6005546001600160a01b031681565b3360009081526003602052604090205460ff168061076757506000546001600160a01b031633145b6107b8576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e20756e7265737472696374656420636f6e74726f6c6c65720000604482015290519081900360640190fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031681565b60085460009060ff16156107fb57506000610ca5565b600061080561103f565b905060008590507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab27c58b826040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561087957600080fd5b505afa15801561088d573d6000803e3d6000fd5b505050506040513d60208110156108a357600080fd5b505180156108bd5750600554600160b01b900461ffff1615155b15610c37576040805163224889f960e11b81526001600160a01b03838116600483015260006024830181905292517f00000000000000000000000000000000000000000000000000000000000000009091169263449113f2926044808201939182900301818387803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b505050506000610955826110c2565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d60608110156109bd57600080fd5b50805160209091015190925090506001600160a01b038084167f000000000000000000000000000000000000000000000000000000000000000090911611610a06578082610a09565b81815b80925081935050506000836001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a6057600080fd5b505afa158015610a74573d6000803e3d6000fd5b505050506040513d6020811015610a8a57600080fd5b505190506001600160701b0383168111610aa357600080fd5b6000610abe6001600160701b038086168085039186166111d3565b9050612710878202048103808a1115610ad657600080fd5b6008805460ff191660011790556005546001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb908e906127109061ffff600160b01b909104168e02046040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b50506008805460ff191690556040805163224889f960e11b81526001600160a01b03898116600483015260006024830181905292517f00000000000000000000000000000000000000000000000000000000000000009091169263449113f2926044808201939182900301818387803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b505050505050505050505b600154600160a01b900460ff1680610c6757506001600160a01b03861660009081526004602052604090205460ff165b80610c8a57506001600160a01b03851660009081526004602052604090205460ff165b15610c9a57600092505050610ca5565b506127109083020490505b949350505050565b60065481565b6000546001600160a01b0316331480610cdb57503360009081526003602052604090205460ff165b610d165760405162461bcd60e51b815260040180806020018281038252602b81526020018061162e602b913960400191505060405180910390fd5b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610d8d576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6126ac8161ffff161115610dd25760405162461bcd60e51b815260040180806020018281038252602a815260200180611604602a913960400191505060405180910390fd5b6005805461ffff909216600160b01b0261ffff60b01b19909216919091179055565b6000546001600160a01b03163314610e40576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600554600160c01b900461ffff1681565b3360009081526003602052604090205460ff1680610e9b57506000546001600160a01b031633145b610eec576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e206f776e6572206f722066656520636f6e74726f6c6c65720000604482015290519081900360640190fd5b6127108161ffff161115610f315760405162461bcd60e51b815260040180806020018281038252602b81526020018061155e602b913960400191505060405180910390fd5b6005805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b60036020526000908152604090205460ff1681565b6000546001600160a01b03163314610fb4576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116301415919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261103a908490611221565b505050565b60008060075442101561109257670de0b6b3a76400006006544260075403600560189054906101000a900461ffff1661ffff1602670de0b6b3a7640000028161108457fe5b048161108c57fe5b04611095565b60005b600554909150600160a01b900461ffff16810161271081116110b757806110bb565b6127105b9250505090565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fe57600080fd5b505afa158015611112573d6000803e3d6000fd5b505050506040513d602081101561112857600080fd5b505190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169082161461116657806111cc565b826001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d60208110156111c957600080fd5b50515b9392505050565b6000806111e2856103e56112d2565b905060006111f082856112d2565b9050600061120a83611204886103e86112d2565b90611334565b905080828161121557fe5b04979650505050505050565b6000611276826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661138e9092919063ffffffff16565b80519091501561103a5780806020019051602081101561129557600080fd5b505161103a5760405162461bcd60e51b815260040180806020018281038252602a8152602001806115da602a913960400191505060405180910390fd5b6000826112e15750600061132e565b828202828482816112ee57fe5b041461132b5760405162461bcd60e51b81526004018080602001828103825260218152602001806115896021913960400191505060405180910390fd5b90505b92915050565b60008282018381101561132b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060610ca58484600085856113a2856114b3565b6113f3576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106114315780518252601f199092019160209182019101611412565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611493576040519150601f19603f3d011682016040523d82523d6000602084013e611498565b606091505b50915091506114a88282866114b9565b979650505050505050565b3b151590565b606083156114c85750816111cc565b8251156114d85782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561152257818101518382015260200161150a565b50505050905090810190601f16801561154f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4665652072617465206d757374206265206c657373207468616e206f7220657175616c20746f2031303025536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7744756d70207461782072617465206d757374206265206c657373207468616e206f7220657175616c20746f20313030255361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644665652072617465206d757374206265206c657373207468616e206f7220657175616c20746f203939254e6f7420616e206f776e6572206f722066726565207061727469636970616e7420636f6e74726f6c6c6572a264697066735822122028022ade5458fa9967887a2e6bd96cbc229b80c026767595a3e52cb11643599764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80636052970c116100c3578063a61515251161007c578063a615152514610345578063b17fb9d614610366578063b40e180b1461038c578063ca1123c214610394578063e30b472f146103b5578063f2fde38b146103db5761014d565b80636052970c146102885780638327eb87146102ac5780638da5cb5b146102cb57806395c47d06146102d35780639aa3d4bd1461030f5780639c8c247c146103175761014d565b80631dbb8db3116101155780631dbb8db3146101e4578063240a53d41461020a57806326278f86146102305780633e2a196e14610238578063467ee03c146102665780634e71e0c8146102805761014d565b80630423142914610152578063127043c31461017157806313b0dc981461017957806316114acd146101a25780631d6f7d50146101c8575b600080fd5b61015a610401565b6040805161ffff9092168252519081900360200190f35b61015a610412565b6101a06004803603604081101561018f57600080fd5b5061ffff8135169060200135610423565b005b6101a0600480360360208110156101b857600080fd5b50356001600160a01b031661050e565b6101d06105fd565b604080519115158252519081900360200190f35b6101d0600480360360208110156101fa57600080fd5b50356001600160a01b0316610606565b6101d06004803603602081101561022057600080fd5b50356001600160a01b031661061b565b6101d0610630565b6101a06004803603604081101561024e57600080fd5b506001600160a01b0381351690602001351515610640565b61026e6106b7565b60408051918252519081900360200190f35b6101a06106bd565b610290610730565b604080516001600160a01b039092168252519081900360200190f35b6101a0600480360360208110156102c257600080fd5b5035151561073f565b6102906107d6565b61026e600480360360808110156102e957600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356107e5565b61026e610cad565b6101a06004803603604081101561032d57600080fd5b506001600160a01b0381351690602001351515610cb3565b6101a06004803603602081101561035b57600080fd5b503561ffff16610d41565b6101a06004803603602081101561037c57600080fd5b50356001600160a01b0316610df4565b61015a610e62565b6101a0600480360360208110156103aa57600080fd5b503561ffff16610e73565b6101d0600480360360208110156103cb57600080fd5b50356001600160a01b0316610f53565b6101a0600480360360208110156103f157600080fd5b50356001600160a01b0316610f68565b600554600160b01b900461ffff1681565b600554600160a01b900461ffff1681565b3360009081526003602052604090205460ff168061044b57506000546001600160a01b031633145b61049c576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e206f776e6572206f722066656520636f6e74726f6c6c65720000604482015290519081900360640190fd5b6127108261ffff1611156104e15760405162461bcd60e51b81526004018080602001828103825260308152602001806115aa6030913960400191505060405180910390fd5b6005805461ffff909316600160c01b0261ffff60c01b199093169290921790915560068190554201600755565b6000546001600160a01b0316331461055a576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b61056381610fd6565b61056c57600080fd5b6105fa33826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d60208110156105e757600080fd5b50516001600160a01b0384169190610fe8565b50565b60085460ff1681565b60046020526000908152604090205460ff1681565b60026020526000908152604090205460ff1681565b600154600160a01b900460ff1681565b6000546001600160a01b0316331461068c576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b60075481565b6001546001600160a01b031633146106d457600080fd5b600180546001600160a01b03191690556000805460405133926001600160a01b03909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03191633179055565b6005546001600160a01b031681565b3360009081526003602052604090205460ff168061076757506000546001600160a01b031633145b6107b8576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e20756e7265737472696374656420636f6e74726f6c6c65720000604482015290519081900360640190fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031681565b60085460009060ff16156107fb57506000610ca5565b600061080561103f565b905060008590507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab27c58b826040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561087957600080fd5b505afa15801561088d573d6000803e3d6000fd5b505050506040513d60208110156108a357600080fd5b505180156108bd5750600554600160b01b900461ffff1615155b15610c37576040805163224889f960e11b81526001600160a01b03838116600483015260006024830181905292517f00000000000000000000000000000000000000000000000000000000000000009091169263449113f2926044808201939182900301818387803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b505050506000610955826110c2565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d60608110156109bd57600080fd5b50805160209091015190925090506001600160a01b038084167f000000000000000000000000000000000000000000000000000000000000000090911611610a06578082610a09565b81815b80925081935050506000836001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a6057600080fd5b505afa158015610a74573d6000803e3d6000fd5b505050506040513d6020811015610a8a57600080fd5b505190506001600160701b0383168111610aa357600080fd5b6000610abe6001600160701b038086168085039186166111d3565b9050612710878202048103808a1115610ad657600080fd5b6008805460ff191660011790556005546001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb908e906127109061ffff600160b01b909104168e02046040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b50506008805460ff191690556040805163224889f960e11b81526001600160a01b03898116600483015260006024830181905292517f00000000000000000000000000000000000000000000000000000000000000009091169263449113f2926044808201939182900301818387803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b505050505050505050505b600154600160a01b900460ff1680610c6757506001600160a01b03861660009081526004602052604090205460ff165b80610c8a57506001600160a01b03851660009081526004602052604090205460ff165b15610c9a57600092505050610ca5565b506127109083020490505b949350505050565b60065481565b6000546001600160a01b0316331480610cdb57503360009081526003602052604090205460ff165b610d165760405162461bcd60e51b815260040180806020018281038252602b81526020018061162e602b913960400191505060405180910390fd5b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610d8d576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6126ac8161ffff161115610dd25760405162461bcd60e51b815260040180806020018281038252602a815260200180611604602a913960400191505060405180910390fd5b6005805461ffff909216600160b01b0261ffff60b01b19909216919091179055565b6000546001600160a01b03163314610e40576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600554600160c01b900461ffff1681565b3360009081526003602052604090205460ff1680610e9b57506000546001600160a01b031633145b610eec576040805162461bcd60e51b815260206004820152601e60248201527f4e6f7420616e206f776e6572206f722066656520636f6e74726f6c6c65720000604482015290519081900360640190fd5b6127108161ffff161115610f315760405162461bcd60e51b815260040180806020018281038252602b81526020018061155e602b913960400191505060405180910390fd5b6005805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b60036020526000908152604090205460ff1681565b6000546001600160a01b03163314610fb4576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116301415919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261103a908490611221565b505050565b60008060075442101561109257670de0b6b3a76400006006544260075403600560189054906101000a900461ffff1661ffff1602670de0b6b3a7640000028161108457fe5b048161108c57fe5b04611095565b60005b600554909150600160a01b900461ffff16810161271081116110b757806110bb565b6127105b9250505090565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156110fe57600080fd5b505afa158015611112573d6000803e3d6000fd5b505050506040513d602081101561112857600080fd5b505190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169082161461116657806111cc565b826001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d60208110156111c957600080fd5b50515b9392505050565b6000806111e2856103e56112d2565b905060006111f082856112d2565b9050600061120a83611204886103e86112d2565b90611334565b905080828161121557fe5b04979650505050505050565b6000611276826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661138e9092919063ffffffff16565b80519091501561103a5780806020019051602081101561129557600080fd5b505161103a5760405162461bcd60e51b815260040180806020018281038252602a8152602001806115da602a913960400191505060405180910390fd5b6000826112e15750600061132e565b828202828482816112ee57fe5b041461132b5760405162461bcd60e51b81526004018080602001828103825260218152602001806115896021913960400191505060405180910390fd5b90505b92915050565b60008282018381101561132b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060610ca58484600085856113a2856114b3565b6113f3576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106114315780518252601f199092019160209182019101611412565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611493576040519150601f19603f3d011682016040523d82523d6000602084013e611498565b606091505b50915091506114a88282866114b9565b979650505050505050565b3b151590565b606083156114c85750816111cc565b8251156114d85782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561152257818101518382015260200161150a565b50505050905090810190601f16801561154f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4665652072617465206d757374206265206c657373207468616e206f7220657175616c20746f2031303025536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7744756d70207461782072617465206d757374206265206c657373207468616e206f7220657175616c20746f20313030255361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644665652072617465206d757374206265206c657373207468616e206f7220657175616c20746f203939254e6f7420616e206f776e6572206f722066726565207061727469636970616e7420636f6e74726f6c6c6572a264697066735822122028022ade5458fa9967887a2e6bd96cbc229b80c026767595a3e52cb11643599764736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7200,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7202,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 7767,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "unrestricted",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 7771,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "liquidityControllers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7775,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "feeControllers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7779,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "freeParticipants",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7782,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "feeSplitter",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 7784,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "feesRate",
        "offset": 20,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 7786,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "liquidityIncreaseRate",
        "offset": 22,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 7788,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "dumpTaxStartRate",
        "offset": 24,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 7790,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "dumpTaxDurationInSeconds",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 7792,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "dumpTaxEndTimestamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 7794,
        "contract": "contracts/RootedTransferGateV2.sol:RootedTransferGateV2",
        "label": "transferInProgress",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}