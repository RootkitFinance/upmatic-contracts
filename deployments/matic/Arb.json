{
  "address": "0x15031576283DCb1a3dE52af563FdC521206Be8b5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_usd",
          "type": "address"
        },
        {
          "internalType": "contract IERC31337",
          "name": "_elite",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_rooted",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "contract RootedTransferGate",
          "name": "_gate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multisig",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "arbManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "balancePriceBase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "balancePriceElite",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "managerAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "setArbManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "unrestrictedSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokensToMultisig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
  "receipt": {
    "to": null,
    "from": "0xBd57Dac98f75c9Db5f18ffA13E7eaf48b4A5Bb70",
    "contractAddress": "0x15031576283DCb1a3dE52af563FdC521206Be8b5",
    "transactionIndex": 45,
    "gasUsed": "1325235",
    "logsBloom": "0x
    "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062",
    "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
    "logs": [
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000015031576283dcb1a3de52af563fdc521206be8b5",
          "0x000000000000000000000000cd0610e3b1af3d86d4e046648b3bfe412b64c6f1"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 176,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000015031576283dcb1a3de52af563fdc521206be8b5",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 177,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0xe6a11F125a834E0676F3f8f33eb347D4e1938264",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000015031576283dcb1a3de52af563fdc521206be8b5",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 178,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0xcd0610e3b1Af3d86D4E046648B3BFE412b64c6F1",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000015031576283dcb1a3de52af563fdc521206be8b5",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 179,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000015031576283dcb1a3de52af563fdc521206be8b5",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 180,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      },
      {
        "transactionIndex": 45,
        "blockNumber": 38298554,
        "transactionHash": "0xd6185b85c5de86e470da9ae4c66a1078de7d257d7e4890f8e4e0c3b5919a082c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000bd57dac98f75c9db5f18ffa13e7eaf48b4a5bb70",
          "0x000000000000000000000000e7e2cb8c81c10ff191a73fe266788c9ce62ec754"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000093443817a1a6900000000000000000000000000000000000000000000000006b12412fca3036c60000000000000000000000000000000000000000000007e67e5bbc3542af5f8c0000000000000000000000000000000000000000000000006a7efcf7b28e90360000000000000000000000000000000000000000000007e67eef006d5a51061c",
        "logIndex": 181,
        "blockHash": "0x2f946ca18788991e73c51cbde34127b3565537354ec5dc22fcbde9ac2824a062"
      }
    ],
    "blockNumber": 38298554,
    "cumulativeGasUsed": "9626974",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
    "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
    "0xcd0610e3b1Af3d86D4E046648B3BFE412b64c6F1",
    "0xe6a11F125a834E0676F3f8f33eb347D4e1938264",
    "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff",
    "0xE1a3bAEB559DD858C6DbeC54eA6521dcE38cD986",
    "0x8295aDa05d34E9205986aE4f69Bc0615bdaaa027"
  ],
  "numDeployments": 1,
  "solcInputHash": "68631ae747d7e917982f4819604187de",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_base\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_usd\",\"type\":\"address\"},{\"internalType\":\"contract IERC31337\",\"name\":\"_elite\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rooted\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"contract RootedTransferGate\",\"name\":\"_gate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multisig\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"arbManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"balancePriceBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"balancePriceElite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"managerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"setArbManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"unrestrictedSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokensToMultisig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arb.sol\":\"Arb\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x8a2fdbc25e22c95dce8da7c8d704ef5322fc11ccfc930e2b5c2e6c2bdb80c8dd\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/Arb.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./IERC31337.sol\\\";\\nimport \\\"./IUniswapV2Router02.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./IArb.sol\\\";\\nimport \\\"./RootedTransferGate.sol\\\";\\n\\ncontract Arb is Owned, IArb {\\n    using SafeMath for uint256;\\n\\n    IUniswapV2Router02 immutable uniswapRouter;\\n    IERC20 immutable rooted;\\n    IERC20 immutable base;\\n    IERC20 immutable usd;\\n    IERC31337 immutable elite;\\n    RootedTransferGate immutable gate;\\n    address immutable multisig;\\n    mapping(address => bool) public arbManager;\\n\\n    constructor(IERC20 _base, IERC20 _usd, IERC31337 _elite, IERC20 _rooted, IUniswapV2Router02 _uniswapRouter, RootedTransferGate _gate, address _multisig) {\\n        base = _base;\\n        elite = _elite;\\n        usd = _usd;\\n        rooted = _rooted;\\n        uniswapRouter = _uniswapRouter;\\n        gate = _gate;\\n        multisig = _multisig;\\n        \\n        _base.approve(address(_elite), uint256(-1));\\n        _base.approve(address(_uniswapRouter), uint256(-1));\\n        _rooted.approve(address(_uniswapRouter), uint256(-1));\\n        _elite.approve(address(_uniswapRouter), uint256(-1));\\n        _usd.approve(address(_uniswapRouter), uint256(-1));\\n    }\\n\\n    modifier arbManagerOnly() {\\n        require(arbManager[msg.sender], \\\"Not an arb Manager\\\");\\n        _;\\n    }\\n\\n    // Owner function to enable other contracts or addresses to use the Vault\\n    function setArbManager(address managerAddress, bool allow) public ownerOnly() {\\n        arbManager[managerAddress] = allow;\\n    }\\n\\n    function withdrawTokensToMultisig(IERC20 token, uint256 amount) public override {\\n        require (arbManager[msg.sender] || msg.sender == multisig || msg.sender == owner);\\n        token.transfer(multisig, amount);\\n    }\\n\\n    function unrestrictedSwap(uint amount, uint minAmountOut, address[] calldata path) public override arbManagerOnly() {\\n        gate.setUnrestricted(true);\\n        uniswapRouter.swapExactTokensForTokens(amount, minAmountOut, path, address(this), block.timestamp);\\n        gate.setUnrestricted(false);\\n    }\\n\\n    function balancePriceBase(uint256 amount, uint256 minAmountOut) public override arbManagerOnly() {\\n        require (minAmountOut > amount);\\n        gate.setUnrestricted(true);\\n        address[] memory path = new address[](3);\\n        path[0] = address(base);\\n        path[1] = address(rooted);\\n        path[2] = address(elite);\\n        uniswapRouter.swapExactTokensForTokens(amount, minAmountOut, path, address(this), block.timestamp);\\n        elite.withdrawTokens(elite.balanceOf(address(this)));\\n        gate.setUnrestricted(false);\\n    }\\n\\n    function balancePriceElite(uint256 amount, uint256 minAmountOut) public override arbManagerOnly() {\\n        require (minAmountOut > amount);\\n        gate.setUnrestricted(true);\\n        elite.depositTokens(amount);\\n        address[] memory path = new address[](3);\\n        path[0] = address(elite);\\n        path[1] = address(rooted);\\n        path[2] = address(base);\\n        uniswapRouter.swapExactTokensForTokens(amount, minAmountOut, path, address(this), block.timestamp);\\n        gate.setUnrestricted(false);\\n    }\\n\\n    function recoverTokens(IERC20 token) public ownerOnly() {\\n        require(address(token) != address(base) && address(token) != address(usd) && address(token) != address(elite) && address(token) != address(rooted));\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n}\",\"keccak256\":\"0x9b3ecafa21f6c781ef0beaba2c162d3734f77ed988eb5c21fa6edb9bc76e0c96\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/BlackListRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./Owned.sol\\\";\\n\\ncontract BlackListRegistry is Owned\\n{\\n    mapping (address => bool) public blackList;\\n    \\n    function setBlackListed(address account, bool blackListed) public ownerOnly()\\n    {\\n        blackList[account] = blackListed;\\n    }\\n}\",\"keccak256\":\"0x6f0dab2be683fa447d6b50dbd0c5a1c19649d640a1628fec78de1491ecdb299f\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/FreeParticipantRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./Owned.sol\\\";\\n\\ncontract FreeParticipantRegistry is Owned\\n{\\n    address transferGate;\\n    mapping (address => bool) public freeParticipantControllers;\\n    mapping (address => bool) public freeParticipant;\\n\\n    modifier transferGateOnly()\\n    {\\n        require (msg.sender == transferGate, \\\"Transfer Gate only\\\");\\n        _;\\n    }\\n\\n    function setTransferGate(address _transferGate) public ownerOnly()\\n    {\\n        transferGate = _transferGate;\\n    }\\n\\n    function setFreeParticipantController(address freeParticipantController, bool allow) public transferGateOnly()\\n    {\\n        freeParticipantControllers[freeParticipantController] = allow;\\n    }\\n\\n    function setFreeParticipant(address participant, bool free) public transferGateOnly()\\n    {\\n        freeParticipant[participant] = free;\\n    }\\n}\",\"keccak256\":\"0x886039f47f479c9df29f0164878f6fc10b473375b39fb36995b7730a0aa51070\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IArb.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.4;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IArb {\\n    function unrestrictedSwap(uint amount, uint minAmountOut, address[] calldata path) external;\\n    function balancePriceBase(uint256 amount, uint256 minAmountOut) external;\\n    function balancePriceElite(uint256 amount, uint256 minAmountOut) external;\\n    function withdrawTokensToMultisig(IERC20 token, uint256 amount) external;\\n}\",\"keccak256\":\"0xcaae1c442a5eedaac717efce147d898f0e23e902b62262ee97702ff762e2664f\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface IERC20 \\n{\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address _account) external view returns (uint256);\\n    function transfer(address _recipient, uint256 _amount) external returns (bool);\\n    function allowance(address _owner, address _spender) external view returns (uint256);\\n    function approve(address _spender, uint256 _amount) external returns (bool);\\n    function transferFrom(address _sender, address _recipient, uint256 _amount) external returns (bool);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x686935694b8075dd535c64bd63dbb9a5fbc720e11143819c6fe2cbfa194e7610\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IERC31337.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IWrappedERC20.sol\\\";\\nimport \\\"./IFloorCalculator.sol\\\";\\n\\ninterface IERC31337 is IWrappedERC20\\n{\\n    function floorCalculator() external view returns (IFloorCalculator);\\n    function sweepers(address _sweeper) external view returns (bool);\\n    \\n    function setFloorCalculator(IFloorCalculator _floorCalculator) external;\\n    function setSweeper(address _sweeper, bool _allow) external;\\n    function sweepFloor(address _to) external returns (uint256 amountSwept);\\n}\",\"keccak256\":\"0x4d86c0abd81cb24d35232438dc7d98b0b58b8fc98c0ca3b00f6cb6ecd821699f\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IFloorCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IFloorCalculator\\n{\\n    function calculateSubFloor(IERC20 baseToken, IERC20 eliteToken) external view returns (uint256);\\n}\",\"keccak256\":\"0xbac8a05f883ead0635872782625498de0b69b81113f09e68f5a610aa2c7dd632\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ILiquidityLockedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IUniswapV2Pair.sol\\\";\\n\\ninterface ILiquidityLockedERC20\\n{\\n    function setLiquidityLock(IUniswapV2Pair _liquidityPair, bool _locked) external;\\n}\",\"keccak256\":\"0x1d53fa69ac8c1ddb2dd706c39fd581fefeeab1e3795e39414cdeb0ba26d36cdc\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IOwned.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface IOwned\\n{\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function owner() external view returns (address);\\n\\n    function transferOwnership(address newOwner) external;\\n    function claimOwnership() external;\\n}\",\"keccak256\":\"0xc359bb32bf2da96347d1b9a49ac4db7376cfe150a606ec808a5d758a465ee3e0\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ITokensRecoverable.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface ITokensRecoverable\\n{\\n    function recoverTokens(IERC20 token) external;\\n}\",\"keccak256\":\"0x739d2acb80e96298bcf576c736e45f6c0df9167ff2e6e14f1cc009e700ec0cdb\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/ITransferGate.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface ITransferGate\\n{\\n    function feeSplitter() external view returns (address);\\n    function handleTransfer(address msgSender, address from, address to, uint256 amount) external returns (uint256);\\n}\",\"keccak256\":\"0x0cdf5a8d3b86453c35af1c62f27f8182edcad68de009ebcfb423af7fa41aada4\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.4;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\",\"keccak256\":\"0x02e97c5280dc3f9fcb05871dc67e415e4df5e929a633187d29e0a60f117a2332\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.4;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0x6da01833942916c9679167e1ecf2365b6d6af6b8edc15bc984f108c16a5c6ca2\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.4;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\",\"keccak256\":\"0x92991e75837dba663da42cefdcf443e0f6db0a9e7ed8562057b5ff111b0b5d6a\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IWrappedERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IWrappedERC20Events.sol\\\";\\n\\ninterface IWrappedERC20 is IERC20, IWrappedERC20Events\\n{\\n    function wrappedToken() external view returns (IERC20);\\n    function depositTokens(uint256 _amount) external;\\n    function withdrawTokens(uint256 _amount) external;\\n}\",\"keccak256\":\"0x848f33a5abf31ce8152c8a1cec77ee7a55b69d2b58ae5920bd73446a8b691ae8\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/IWrappedERC20Events.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\ninterface IWrappedERC20Events\\n{\\n    event Deposit(address indexed from, uint256 amount);\\n    event Withdrawal(address indexed to, uint256 amount);\\n}\\n\",\"keccak256\":\"0x8cc02043163850e48cea5e4f1619b29b4b54ef378b0b337ad3a002b03d21deb1\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nProvides ownerOnly() modifier\\nAllows for ownership transfer but requires the new\\nowner to claim (accept) ownership\\nSafer because no accidental transfers or renouncing\\n*/\\n\\nimport \\\"./IOwned.sol\\\";\\n\\nabstract contract Owned is IOwned\\n{\\n    address public override owner = msg.sender;\\n    address internal pendingOwner;\\n\\n    modifier ownerOnly()\\n    {\\n        require (msg.sender == owner, \\\"Owner only\\\");\\n        _;\\n    }\\n\\n    function transferOwnership(address newOwner) public override ownerOnly()\\n    {\\n        pendingOwner = newOwner;\\n    }\\n\\n    function claimOwnership() public override\\n    {\\n        require (pendingOwner == msg.sender);\\n        pendingOwner = address(0);\\n        emit OwnershipTransferred(owner, msg.sender);\\n        owner = msg.sender;\\n    }\\n}\",\"keccak256\":\"0x32a0ae294ac89943fbfb30c5de406ff0edc6d5295133cf5fa702a82cda18a89d\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/RootedTransferGate.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nA transfer gate (GatedERC20) for use with upTokens\\n\\nIt:\\n    Allows customization of tax and burn rates\\n    Allows transfer to/from approved pools\\n    Disallows transfer to/from non-approved pools\\n    Allows transfer to/from anywhere else\\n    Allows for free transfers if permission granted\\n    Allows for unrestricted transfers if permission granted\\n    Allows for a pool to have an extra tax\\n    Allows for a temporary declining tax\\n*/\\n\\nimport \\\"./Address.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IUniswapV2Pair.sol\\\";\\nimport \\\"./ILiquidityLockedERC20.sol\\\";\\nimport \\\"./IUniswapV2Router02.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./TokensRecoverable.sol\\\";\\nimport \\\"./ITransferGate.sol\\\";\\nimport \\\"./FreeParticipantRegistry.sol\\\";\\nimport \\\"./BlackListRegistry.sol\\\";\\n\\ncontract RootedTransferGate is TokensRecoverable, ITransferGate\\n{   \\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n\\n    IUniswapV2Router02 immutable internal uniswapRouter;\\n    ILiquidityLockedERC20 immutable internal rootedToken;\\n\\n    bool public unrestricted;\\n    mapping (address => bool) public unrestrictedControllers;\\n    mapping (address => bool) public feeControllers;\\n    mapping (address => uint16) public poolsTaxRates;\\n\\n    address public override feeSplitter;\\n    uint16 public feesRate;\\n    IUniswapV2Pair public mainPool;\\n    FreeParticipantRegistry public freeParticipantRegistry;\\n    BlackListRegistry public blackListRegistry;\\n   \\n    uint16 public dumpTaxStartRate; \\n    uint256 public dumpTaxDurationInSeconds;\\n    uint256 public dumpTaxEndTimestamp;\\n\\n    constructor(ILiquidityLockedERC20 _rootedToken, IUniswapV2Router02 _uniswapRouter)\\n    {\\n        rootedToken = _rootedToken;\\n        uniswapRouter = _uniswapRouter;\\n    }\\n\\n    function setUnrestrictedController(address unrestrictedController, bool allow) public ownerOnly()\\n    {\\n        unrestrictedControllers[unrestrictedController] = allow;\\n    }\\n    \\n    function setFeeControllers(address feeController, bool allow) public ownerOnly()\\n    {\\n        feeControllers[feeController] = allow;\\n    }\\n\\n    function setFreeParticipantController(address freeParticipantController, bool allow) public ownerOnly()\\n    {\\n        freeParticipantRegistry.setFreeParticipantController(freeParticipantController, allow);\\n    }\\n\\n    function setFreeParticipant(address participant, bool free) public\\n    {\\n        require (msg.sender == owner || freeParticipantRegistry.freeParticipantControllers(msg.sender), \\\"Not an owner or free participant controller\\\");\\n        freeParticipantRegistry.setFreeParticipant(participant, free);\\n    }\\n\\n    function setFeeSplitter(address _feeSplitter) public ownerOnly()\\n    {\\n        feeSplitter = _feeSplitter;\\n    }\\n\\n    function setUnrestricted(bool _unrestricted) public\\n    {\\n        require (unrestrictedControllers[msg.sender], \\\"Not an unrestricted controller\\\");\\n        unrestricted = _unrestricted;\\n        rootedToken.setLiquidityLock(mainPool, !_unrestricted);\\n    }\\n\\n    function setFreeParticipantRegistry(FreeParticipantRegistry _freeParticipantRegistry) public ownerOnly()\\n    {\\n        freeParticipantRegistry = _freeParticipantRegistry;\\n    }\\n\\n    function setBlackListRegistry(BlackListRegistry _blackListRegistry) public ownerOnly()\\n    {\\n        blackListRegistry = _blackListRegistry;\\n    }\\n\\n    function setMainPool(IUniswapV2Pair _mainPool) public ownerOnly()\\n    {\\n        mainPool = _mainPool;\\n    }\\n\\n     function setPoolTaxRate(address pool, uint16 taxRate) public ownerOnly()\\n    {\\n        require (taxRate <= 10000, \\\"Fee rate must be less than or equal to 100%\\\");\\n        poolsTaxRates[pool] = taxRate;        \\n    }\\n\\n    function setDumpTax(uint16 startTaxRate, uint256 durationInSeconds) public\\n    {\\n        require (feeControllers[msg.sender] || msg.sender == owner, \\\"Not an owner or fee controller\\\");\\n        require (startTaxRate <= 10000, \\\"Dump tax rate must be less than or equal to 100%\\\");\\n\\n        dumpTaxStartRate = startTaxRate;\\n        dumpTaxDurationInSeconds = durationInSeconds;\\n        dumpTaxEndTimestamp = block.timestamp + durationInSeconds;\\n    }\\n\\n    function getDumpTax() public view returns (uint256)\\n    {\\n        if (block.timestamp >= dumpTaxEndTimestamp) \\n        {\\n            return 0;\\n        }       \\n        \\n        return dumpTaxStartRate*(dumpTaxEndTimestamp - block.timestamp)*1e18/dumpTaxDurationInSeconds/1e18;\\n    }\\n\\n    function setFees(uint16 _feesRate) public\\n    {\\n        require (feeControllers[msg.sender] || msg.sender == owner, \\\"Not an owner or fee controller\\\");\\n        require (_feesRate <= 10000, \\\"Fee rate must be less than or equal to 100%\\\");\\n        feesRate = _feesRate;\\n    }\\n\\n    function handleTransfer(address, address from, address to, uint256 amount) public virtual override returns (uint256)\\n    {\\n        if (unrestricted || freeParticipantRegistry.freeParticipant(from) || freeParticipantRegistry.freeParticipant(to)) \\n        {\\n            return 0;\\n        }\\n\\n        if (blackListRegistry.blackList(from) || blackListRegistry.blackList(to))\\n        {\\n            return amount;\\n        }\\n\\n        uint16 poolTaxRate = poolsTaxRates[to];\\n\\n        if (poolTaxRate > feesRate) \\n        {\\n            uint256 totalTax = getDumpTax() + poolTaxRate;\\n            return totalTax >= 10000 ? amount : amount * totalTax / 10000;\\n        }\\n\\n        return amount * feesRate / 10000;\\n    }   \\n}\",\"keccak256\":\"0xcdb92301662899066b492649e255f576389ac0db3ab4190bab47e897e12a5f0d\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nModified to remove some junk\\nAlso modified to remove silly restrictions (traps!) within safeApprove\\n*/\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {        \\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0x3f7361be3d553e5eb15d84b652578d89911db8e744de78bd990f1d3cbf7c065e\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\nlibrary SafeMath \\n{\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) \\n        {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n    \\n    function div(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        return c;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) \\n    {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) \\n    {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0xfc5368962f37ca7239c0f1c40cb7bee593a2d20e58163b0ff131312a288d39eb\",\"license\":\"U-U-U-UPPPPP\"},\"contracts/TokensRecoverable.sol\":{\"content\":\"// SPDX-License-Identifier: U-U-U-UPPPPP!!!\\npragma solidity ^0.7.6;\\n\\n/* ROOTKIT:\\nAllows recovery of unexpected tokens (airdrops, etc)\\nInheriters can customize logic by overriding canRecoverTokens\\n*/\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"./Owned.sol\\\";\\nimport \\\"./ITokensRecoverable.sol\\\";\\n\\nabstract contract TokensRecoverable is Owned, ITokensRecoverable\\n{\\n    using SafeERC20 for IERC20;\\n\\n    function recoverTokens(IERC20 token) public override ownerOnly() \\n    {\\n        require (canRecoverTokens(token));\\n        token.safeTransfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n\\n    function canRecoverTokens(IERC20 token) internal virtual view returns (bool) \\n    { \\n        return address(token) != address(this); \\n    }\\n}\",\"keccak256\":\"0x2b4634e73f41f40fdd057dfd3422c3f70599d9f41bc34dc8cd988e58120a8f7c\",\"license\":\"U-U-U-UPPPPP\"}},\"version\":1}",
  "bytecode": "0x610160604052600080546001600160a01b031916331790553480156200002457600080fd5b50604051620017d0380380620017d0833981810160405260e08110156200004a57600080fd5b50805160208083015160408085015160608087015160808089015160a0808b015160c09b8c01516001600160601b03198c881b8116909d5287871b8d166101005289871b8d1660e05285871b8d1690925282861b8c1690935282851b8b16610120529384901b90991661014052845163095ea7b360e01b81526001600160a01b038086166004830152600019602483015295519899969894979296959194918a169263095ea7b3926044808401938290030181600087803b1580156200010f57600080fd5b505af115801562000124573d6000803e3d6000fd5b505050506040513d60208110156200013b57600080fd5b50506040805163095ea7b360e01b81526001600160a01b038581166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b1580156200019257600080fd5b505af1158015620001a7573d6000803e3d6000fd5b505050506040513d6020811015620001be57600080fd5b50506040805163095ea7b360e01b81526001600160a01b038581166004830152600019602483015291519186169163095ea7b3916044808201926020929091908290030181600087803b1580156200021557600080fd5b505af11580156200022a573d6000803e3d6000fd5b505050506040513d60208110156200024157600080fd5b50506040805163095ea7b360e01b81526001600160a01b038581166004830152600019602483015291519187169163095ea7b3916044808201926020929091908290030181600087803b1580156200029857600080fd5b505af1158015620002ad573d6000803e3d6000fd5b505050506040513d6020811015620002c457600080fd5b50506040805163095ea7b360e01b81526001600160a01b038581166004830152600019602483015291519188169163095ea7b3916044808201926020929091908290030181600087803b1580156200031b57600080fd5b505af115801562000330573d6000803e3d6000fd5b505050506040513d60208110156200034757600080fd5b50505050505050505060805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6101405160601c6113c7620004096000398061123c528061128d52508061054352806108c55280610aad5280610c945280610dae52806111be52508061033a52806105a452806106465280610ecf52806110ca5250806102fc5250806102bf52806106e25280610e3352508061037852806106945280610e815250806107305280610b0e5280610f1d52506113c76000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461019e5780639898b583146101c2578063ce0c4a46146101e5578063d34d60081461021f578063f2fde38b1461024b5761009e565b806316114acd146100a35780631e08209c146100cb5780634e71e0c8146100ee5780636420b5c4146100f657806389dfb36d14610124575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b0316610271565b005b6100c9600480360360408110156100e157600080fd5b50803590602001356104bd565b6100c9610949565b6100c96004803603604081101561010c57600080fd5b506001600160a01b03813516906020013515156109bc565b6100c96004803603606081101561013a57600080fd5b813591602081013591810190606081016040820135600160201b81111561016057600080fd5b82018360208201111561017257600080fd5b803590602001918460208302840111600160201b8311171561019357600080fd5b509092509050610a33565b6101a6610d19565b604080516001600160a01b039092168252519081900360200190f35b6100c9600480360360408110156101d857600080fd5b5080359060200135610d28565b61020b600480360360208110156101fb57600080fd5b50356001600160a01b0316611203565b604080519115158252519081900360200190f35b6100c96004803603604081101561023557600080fd5b506001600160a01b038135169060200135611218565b6100c96004803603602081101561026157600080fd5b50356001600160a01b0316611323565b6000546001600160a01b031633146102bd576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561033157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b801561036f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b80156103ad57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b6103b657600080fd5b806001600160a01b031663a9059cbb33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561041357600080fd5b505afa158015610427573d6000803e3d6000fd5b505050506040513d602081101561043d57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b505050506040513d60208110156104b857600080fd5b505050565b3360009081526002602052604090205460ff16610516576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b81811161052257600080fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dd49756e836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b505060408051600380825260808201909252600093509150602082016060803683370190505090507f00000000000000000000000000000000000000000000000000000000000000008160008151811061067257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f0000000000000000000000000000000000000000000000000000000000000000816001815181106106c057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061070e57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173984848430426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156107d25781810151838201526020016107ba565b505050509050019650505050505050600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561083857600080fd5b8101908080516040519392919084600160201b82111561085757600080fd5b90830190602082018581111561086c57600080fd5b82518660208202830111600160201b8211171561088857600080fd5b82525081516020918201928201910280838360005b838110156108b557818101518382015260200161089d565b50505050905001604052505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638327eb8760006040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b0316331461096057600080fd5b600180546001600160a01b03191690556000805460405133926001600160a01b03909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03191633179055565b6000546001600160a01b03163314610a08576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3360009081526002602052604090205460ff16610a8c576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398585858530426040518763ffffffff1660e01b81526004018087815260200186815260200180602001846001600160a01b031681526020018381526020018281038252868682818152602001925060200280828437600081840152601f19601f820116905080830192505050975050505050505050600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610c0757600080fd5b8101908080516040519392919084600160201b821115610c2657600080fd5b908301906020820185811115610c3b57600080fd5b82518660208202830111600160201b82111715610c5757600080fd5b82525081516020918201928201910280838360005b83811015610c84578181015183820152602001610c6c565b50505050905001604052505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638327eb8760006040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015610cfb57600080fd5b505af1158015610d0f573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031681565b3360009081526002602052604090205460ff16610d81576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b818111610d8d57600080fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b158015610df557600080fd5b505af1158015610e09573d6000803e3d6000fd5b505060408051600380825260808201909252600093509150602082016060803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610e5f57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610ead57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600281518110610efb57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173984848430426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610fbf578181015183820152602001610fa7565b505050509050019650505050505050600060405180830381600087803b158015610fe857600080fd5b505af1158015610ffc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561102557600080fd5b8101908080516040519392919084600160201b82111561104457600080fd5b90830190602082018581111561105957600080fd5b82518660208202830111600160201b8211171561107557600080fd5b82525081516020918201928201910280838360005b838110156110a257818101518382015260200161108a565b505050509190910160408181526370a0823160e01b8252306004830152516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016965063315a095d95508694506370a08231935060248083019350602092829003018186803b15801561111b57600080fd5b505afa15801561112f573d6000803e3d6000fd5b505050506040513d602081101561114557600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b15801561118557600080fd5b505af1158015611199573d6000803e3d6000fd5b505060408051638327eb8760e01b815260006004820181905291516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169450638327eb8793506024808301939282900301818387803b15801561092c57600080fd5b60026020526000908152604090205460ff1681565b3360009081526002602052604090205460ff168061125e5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b8061127357506000546001600160a01b031633145b61127c57600080fd5b816001600160a01b031663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b505050506040513d602081101561131d57600080fd5b50505050565b6000546001600160a01b0316331461136f576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212200d3f61cc4a7b9aab74e772a89675af83ea9208970aa3d9d27f00db90071b263764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461019e5780639898b583146101c2578063ce0c4a46146101e5578063d34d60081461021f578063f2fde38b1461024b5761009e565b806316114acd146100a35780631e08209c146100cb5780634e71e0c8146100ee5780636420b5c4146100f657806389dfb36d14610124575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b0316610271565b005b6100c9600480360360408110156100e157600080fd5b50803590602001356104bd565b6100c9610949565b6100c96004803603604081101561010c57600080fd5b506001600160a01b03813516906020013515156109bc565b6100c96004803603606081101561013a57600080fd5b813591602081013591810190606081016040820135600160201b81111561016057600080fd5b82018360208201111561017257600080fd5b803590602001918460208302840111600160201b8311171561019357600080fd5b509092509050610a33565b6101a6610d19565b604080516001600160a01b039092168252519081900360200190f35b6100c9600480360360408110156101d857600080fd5b5080359060200135610d28565b61020b600480360360208110156101fb57600080fd5b50356001600160a01b0316611203565b604080519115158252519081900360200190f35b6100c96004803603604081101561023557600080fd5b506001600160a01b038135169060200135611218565b6100c96004803603602081101561026157600080fd5b50356001600160a01b0316611323565b6000546001600160a01b031633146102bd576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561033157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b801561036f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b80156103ad57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b6103b657600080fd5b806001600160a01b031663a9059cbb33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561041357600080fd5b505afa158015610427573d6000803e3d6000fd5b505050506040513d602081101561043d57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b505050506040513d60208110156104b857600080fd5b505050565b3360009081526002602052604090205460ff16610516576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b81811161052257600080fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dd49756e836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b505060408051600380825260808201909252600093509150602082016060803683370190505090507f00000000000000000000000000000000000000000000000000000000000000008160008151811061067257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f0000000000000000000000000000000000000000000000000000000000000000816001815181106106c057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061070e57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173984848430426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156107d25781810151838201526020016107ba565b505050509050019650505050505050600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561083857600080fd5b8101908080516040519392919084600160201b82111561085757600080fd5b90830190602082018581111561086c57600080fd5b82518660208202830111600160201b8211171561088857600080fd5b82525081516020918201928201910280838360005b838110156108b557818101518382015260200161089d565b50505050905001604052505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638327eb8760006040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b0316331461096057600080fd5b600180546001600160a01b03191690556000805460405133926001600160a01b03909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03191633179055565b6000546001600160a01b03163314610a08576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3360009081526002602052604090205460ff16610a8c576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed17398585858530426040518763ffffffff1660e01b81526004018087815260200186815260200180602001846001600160a01b031681526020018381526020018281038252868682818152602001925060200280828437600081840152601f19601f820116905080830192505050975050505050505050600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610c0757600080fd5b8101908080516040519392919084600160201b821115610c2657600080fd5b908301906020820185811115610c3b57600080fd5b82518660208202830111600160201b82111715610c5757600080fd5b82525081516020918201928201910280838360005b83811015610c84578181015183820152602001610c6c565b50505050905001604052505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638327eb8760006040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015610cfb57600080fd5b505af1158015610d0f573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031681565b3360009081526002602052604090205460ff16610d81576040805162461bcd60e51b81526020600482015260126024820152712737ba1030b71030b9311026b0b730b3b2b960711b604482015290519081900360640190fd5b818111610d8d57600080fd5b60408051638327eb8760e01b81526001600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638327eb8791602480830192600092919082900301818387803b158015610df557600080fd5b505af1158015610e09573d6000803e3d6000fd5b505060408051600380825260808201909252600093509150602082016060803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610e5f57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610ead57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600281518110610efb57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173984848430426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610fbf578181015183820152602001610fa7565b505050509050019650505050505050600060405180830381600087803b158015610fe857600080fd5b505af1158015610ffc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561102557600080fd5b8101908080516040519392919084600160201b82111561104457600080fd5b90830190602082018581111561105957600080fd5b82518660208202830111600160201b8211171561107557600080fd5b82525081516020918201928201910280838360005b838110156110a257818101518382015260200161108a565b505050509190910160408181526370a0823160e01b8252306004830152516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016965063315a095d95508694506370a08231935060248083019350602092829003018186803b15801561111b57600080fd5b505afa15801561112f573d6000803e3d6000fd5b505050506040513d602081101561114557600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b15801561118557600080fd5b505af1158015611199573d6000803e3d6000fd5b505060408051638327eb8760e01b815260006004820181905291516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169450638327eb8793506024808301939282900301818387803b15801561092c57600080fd5b60026020526000908152604090205460ff1681565b3360009081526002602052604090205460ff168061125e5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b8061127357506000546001600160a01b031633145b61127c57600080fd5b816001600160a01b031663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b505050506040513d602081101561131d57600080fd5b50505050565b6000546001600160a01b0316331461136f576040805162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212200d3f61cc4a7b9aab74e772a89675af83ea9208970aa3d9d27f00db90071b263764736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7200,
        "contract": "contracts/Arb.sol:Arb",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7202,
        "contract": "contracts/Arb.sol:Arb",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 329,
        "contract": "contracts/Arb.sol:Arb",
        "label": "arbManager",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}